.. contents::
   :depth: 3
..

替换字符串示例
==============

re.sub(pattern,repl,string,count,[flags]) ``替换子字符串，返回替换后的字符串``
------------------------------------------------------------------------------

re.subn(pattern,repl,string,count,[flags]) ``作用与sub()相同返回一个二元元祖，第一个是匹配结果，第二个是匹配次数``
------------------------------------------------------------------------------------------------------------------

代码示例
~~~~~~~~

::


   import re

   s = "Life can be bad"
   print(re.sub("bad", "good", s))  # Life can be good
   print(re.sub("bad|be", "good", s))  # Life can good good
   print(re.sub("bad|be", 'good', s, 1))  # 用“good”替换“bad”或者“be”,只替换一次         # Life can good bad
   print(re.subn("bad|be", "good", s, 1))  # 用“good”替换“bad”或者“be”,只替换一次        # ('Life can good bad', 1)

   r = re.subn("bad|be", "good", s)                                                        
   print(r[0])  # 输出元祖第一项            # Life can good good
   print(r[1])  # 输出元祖第二项               #  2

::

   import re

   print("str1:- ")
   str1 = "Sky is blue. Sky is beautiful."
   print("Original: ", str1)
   p = re.subn('beautiful', 'stunning', str1)
   print("Replaced: ", p)

   print()
   print("str_line:- ")
   str_line = 'Peter Piper picked a peck of pickled peppers. How many pickled peppers did Peter Piper pick?'
   print("Original: ", str_line)
   p = re.subn('Peter', 'Mary', str_line)
   print("Replaced: ", p)
